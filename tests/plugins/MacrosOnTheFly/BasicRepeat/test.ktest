VERSION 1

KEYSWITCH A 0 0
KEYSWITCH B 0 1
KEYSWITCH J 1 0
KEYSWITCH L_SHIFT 0 3
KEYSWITCH MACROREC   0 7
KEYSWITCH MACROPLAY  1 7
KEYSWITCH MACRODELAY 2 7

# ==============================================================================
# MacrosOnTheFly can record and replay something.
# Note:  in discussions below the notation "X" means press X down and up.
#        notation "X|" means press X down.
#        notation "X^" means release X.
NAME MacrosOnTheFly basic record and replay
# .........................................................................
# Should not affect standard typing (it did very early on). {{{
# Press of  "A B J"  emits those keypresses.

RUN 10 ms

# {{{ Press and release A, see that A is reported
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_A # Report should contain only `A`
RUN 1 cycle
RELEASE A
RUN 1 cycle
EXPECT keyboard-report empty # Report should be empty
RUN 1 cycle
RUN 5 ms
# }}}

# {{{ Press and release B, see that B is reported
PRESS B
RUN 1 cycle
EXPECT keyboard-report Key_B # Report should contain only `B`
RUN 1 cycle
RELEASE B
RUN 1 cycle
EXPECT keyboard-report empty # Report should be empty
RUN 1 cycle
RUN 5 ms
# }}}

# {{{ Press and release J, see that J is reported
PRESS J
RUN 1 cycle
EXPECT keyboard-report Key_J # Report should contain only `J`
RUN 1 cycle
RELEASE J
RUN 1 cycle
EXPECT keyboard-report empty # Report should be empty
RUN 1 cycle
RUN 5 ms
# }}}

# ......................................................................... }}}
# Test that   "PLAY PLAY"  does not replay anything when no macro yet replayed {{{
# recorded.

PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report

# ......................................................................... }}}
# Basic record of single characters. {{{
# Pressing   "REC A J REC"   reports "J".
# Pressing   "REC B B REC"   reports "B".

# {{{ Record J into macro slot A.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT no keyboard-report
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
PRESS J
RUN 1 cycle
EXPECT keyboard-report Key_J # Should report while recording macro.
RELEASE J
RUN 1 cycle
EXPECT keyboard-report empty # Report should be empty
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 ms
# }}}

# {{{ Record B into macro slot B.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS B
RUN 1 cycle
EXPECT no keyboard-report
RELEASE B
RUN 1 cycle
EXPECT no keyboard-report
PRESS B
RUN 1 cycle
EXPECT keyboard-report Key_B # Should report while recording macro.
RELEASE B
RUN 1 cycle
EXPECT keyboard-report empty # Report should be empty
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 ms
# }}}

# ......................................................................... }}}
# Test that   "PLAY PLAY"  does not break things when run before anything {{{
# played.
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report

# ......................................................................... }}}
# Replay behaves as expected. {{{
# After the above recording of `J` into macro slot `A` and `B` into macro slot
# `B`, then:
# Pressing   "PLAY B" emits "B" (before B has been released).
# Pressing   "PLAY PLAY" emits "B" (after having done the above play).
# Pressing   "PLAY A" emits "J" (before A has been released).

# {{{ Replay macro slot B (which should contain a single press B)
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
PRESS B
RUN 1 cycle
EXPECT keyboard-report Key_B # Should report the macro.
EXPECT keyboard-report empty # Report should be empty
RUN 1 cycle
RELEASE B
RUN 1 cycle
EXPECT no keyboard-report
# }}}

# {{{ Replay "last played" macro slot (which should be B).
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
PRESS MACROPLAY
RUN 1 cycle
EXPECT keyboard-report Key_B # Should report the macro.
EXPECT keyboard-report empty # Report should be empty
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
# }}}

# {{{ Replay macro slot A (which should contain single press of J).
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_J # Should report the macro.
EXPECT keyboard-report empty # Report should be empty
RUN 1 cycle
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
# }}}

# ......................................................................... }}}
# Can "zero out" a macro. {{{
# Pressing  "REC A REC" clears a macro.
# (More precisely this is supposed to turn a macro into an empty macro, so it's
# still there but does not have any key presses stored in it).

# {{{ Clear Macro slot A.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT no keyboard-report
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
PRESS MACROREC
RUN 1 cycle
RELEASE MACROREC
RUN 1 ms
# }}}

# {{{ Play macro slot A (see nothing happens).
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROPLAY
RUN 1 cycle
PRESS A
RUN 1 cycle
EXPECT no keyboard-report
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
# }}}

# ......................................................................... }}}
# Any key held down when attempting to start the macro recording means that the {{{
# macro recording is not started.
# Do not need to release MACROREC before pressing the macro recording key.
# Pressing "REC| A| A^ REC^ J REC"   does not record anything.

# {{{ Fail to record into macro slot A because of held-down MACROREC.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_A # Should report the key since it was not consumed.
RELEASE A
RUN 1 cycle
EXPECT keyboard-report empty # Similarly, should report the key release.
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS J
RUN 1 cycle
EXPECT keyboard-report Key_J # Should report (and should be outside of macro)
RELEASE J
RUN 1 cycle
EXPECT keyboard-report empty # Report should be empty
RUN 1 ms
# }}}

# {{{ Double-check the macro was not recorded (and hence will not be replayed).
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
# }}}

# ......................................................................... }}}
# Does recording multiple keys at once work? {{{
# Starting with does recording a Shift+J work correctly and does it send the
# same thing.
# Pressing  "REC A L_SHIFT| J L_SHIFT^ REC    PLAY A"
# Records a sequence of "L_SHIFT| J L_SHIFT^" then replays it.

# {{{ Record macro of SHIFT+J into slot A.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT no keyboard-report
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
PRESS L_SHIFT
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift # Report shift.
PRESS J
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift Key_J # Should report shift plus J.
RELEASE J
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift
RELEASE L_SHIFT
RUN 1 cycle
EXPECT keyboard-report empty
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 ms
# }}}

# {{{ Replay macro slot A (which contains SHIFT + J).
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift # Replaying pressing Shift.
EXPECT keyboard-report Key_LeftShift Key_J # Replaying shift+J
EXPECT keyboard-report Key_LeftShift # Replaying removed J
EXPECT keyboard-report empty
RUN 1 cycle
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
# }}}

# {{{ Replaying with LSHIFT held down does not replay.
PRESS L_SHIFT
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift Key_A
RELEASE A
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift
RELEASE L_SHIFT
RUN 1 cycle
EXPECT keyboard-report empty
RUN 1 ms
# }}}

# ......................................................................... }}}
# Recording with some key other than MACROREC pressed also does not record. {{{

# {{{ Attempt to record with LSHIFT held down -- should not work.
PRESS L_SHIFT
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift # Report shift.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift Key_A # LSHIFT held so recording not happening.
RELEASE A
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift
PRESS J
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift Key_J
RELEASE J
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift
RELEASE L_SHIFT
RUN 1 cycle
EXPECT keyboard-report empty
RUN 1 ms
# }}}

# ......................................................................... }}}
# Pressing  "B| REC A| B^ A^" exits and does not record. {{{

# {{{ Hold down B and press some keys -- ensure "before" makes sense.
# N.b. just to double-check have the standard keyboard report format for
# holding down B and pressing a bunch of other keys.
PRESS B
RUN 1 cycle
EXPECT keyboard-report Key_B
PRESS L_SHIFT
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift Key_B # Report shift.
PRESS J
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift Key_B Key_J # Should report shift plus J plus B.
RELEASE J
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift Key_B
RELEASE L_SHIFT
RUN 1 cycle
EXPECT keyboard-report Key_B
RELEASE B
RUN 1 cycle
EXPECT keyboard-report empty
RUN 1 ms
# }}}

# {{{ Hold down B over the start of a macro recording -- see no macro is recorded.
PRESS B
RUN 1 cycle
EXPECT keyboard-report Key_B
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_B Key_A
RELEASE B
RUN 1 cycle
EXPECT keyboard-report Key_A
RELEASE A
RUN 1 cycle
EXPECT keyboard-report empty
RUN 1 ms
# }}}

# {{{ "Get into IDLE state sequence"
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
# }}}

# {{{ Double-check original macro (from quite a while ago) not overridden.
# (by checking that the original macro is replayed).
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_LeftShift # Replaying pressing Shift.
EXPECT keyboard-report Key_LeftShift Key_J # Replaying shift+J
EXPECT keyboard-report Key_LeftShift # Replaying removed J
EXPECT keyboard-report empty
RUN 1 cycle
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
# }}}


# ......................................................................... }}}
# Holding a key down while exiting macro state does not mess up recording.  {{{

# {{{ Record J into macro slot A -- keep held down when finishing the recording.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
PRESS A
RUN 1 cycle
EXPECT no keyboard-report
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
PRESS J
RUN 1 cycle
EXPECT keyboard-report Key_J # Should report while recording macro.
PRESS MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE MACROREC
RUN 1 cycle
EXPECT no keyboard-report
RELEASE J
RUN 1 cycle
EXPECT keyboard-report empty # Report should be empty
RUN 1 ms
# }}}

# {{{ Replay macro slot A (which should contain single press of J).
# TODO I really don't understand why this isn't working right now.
# FWIW the `empty` report is seen after the `A` release rather than before it,
# but I don't know why.
PRESS MACROPLAY
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 cycle
RELEASE MACROPLAY
RUN 1 cycle
PRESS A
RUN 1 cycle
EXPECT keyboard-report Key_J # Should report the macro.
EXPECT keyboard-report empty # Report should be empty
RUN 1 cycle
RELEASE A
RUN 1 cycle
EXPECT no keyboard-report
RUN 1 ms
# }}}

# ......................................................................... }}}
# vim: foldmethod=marker
